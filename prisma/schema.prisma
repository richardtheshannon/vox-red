// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String   @map("password_hash")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("users")
}

model Article {
  id            String    @id @default(uuid())
  title         String    @db.VarChar(255)
  subtitle      String?   @db.VarChar(500)
  content       String    @db.Text
  orderPosition Int       @map("order_position")
  textAlign     String    @default("left") @map("text_align") // "left" or "right"
  verticalAlign String    @default("center") @map("vertical_align") // "top", "center", or "bottom"
  parentId      String?   @map("parent_id") // NULL for main articles, parent ID for sub-articles
  published     Boolean   @default(true) // false for unpublished/completed slides
  isProject     Boolean   @default(false) @map("is_project") // true for imported markdown projects
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  parent        Article?  @relation("ArticleToSubArticles", fields: [parentId], references: [id], onDelete: Cascade)
  subArticles   Article[] @relation("ArticleToSubArticles")

  @@index([orderPosition])
  @@index([parentId])
  @@index([published])
  @@map("articles")
}
